name: Deploy

on:
  pull_request: 
    branches: [master]
  workflow_dispatch:
    
jobs:
  PreparacaoArtefato:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Criando arquivo .env 
        run: mv .env.example .env

      - name: Preparando artefato
        run: |
          mkdir -p artifact
          rsync -a --exclude='artifact' --exclude='.git' --exclude='.github' ./ ./artifact/

      - name: Salvando artefato
        uses: actions/upload-artifact@v4
        with:
          name: audittei-api
          path: ./artifact

  HML:
    runs-on: ubuntu-latest
    environment:
        name: Staging
        url: ${{ vars.BASE_URL }}
    needs: PreparacaoArtefato
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: audittei-api
          path: ./artifact

      - name: Definindo versão
        run: |
          next_version=$(sed -n '2p' ./artifact/gitversion.yml | awk -F ': ' '/next_version/ {print $2}') 
          echo "APP_VERSION=$next_version" >> $GITHUB_ENV
  
      - name: Definindo Variáveis de ambiente
        run: |
          awk '{gsub(/\{\{ APP_NAME \}\}/, "${{ vars.APP_NAME }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ APP_URL \}\}/, "${{ secrets.APP_URL }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ APP_VERSION \}\}/, "${{ env.APP_VERSION }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ ENVIRONMENT \}\}/, "${{ vars.ENVIRONMENT }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ DB_HOST \}\}/, "${{ secrets.DB_HOST }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ DB_DATABASE \}\}/, "${{ secrets.DB_DATABASE }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ DB_USERNAME \}\}/, "${{ secrets.DB_USERNAME }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ DB_PASSWORD \}\}/, "${{ secrets.DB_PASSWORD }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ MAIL_HOST \}\}/, "${{ secrets.MAIL_HOST }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ MAIL_PORT \}\}/, "${{ secrets.MAIL_PORT }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ MAIL_USERNAME \}\}/, "${{ secrets.MAIL_USERNAME }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ MAIL_PASSWORD \}\}/, "${{ secrets.MAIL_PASSWORD }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ MAIL_FROM_ADDRESS \}\}/, "${{ secrets.MAIL_FROM_ADDRESS }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
          awk '{gsub(/\{\{ CNPJ_API_KEY \}\}/, "${{ secrets.CNPJ_API_KEY }}"); print}' ./artifact/.env > temp && mv temp ./artifact/.env
      
      - name: Deploy
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rlgoDzvc --delete"
          REMOTE_HOST: ${{ vars.REMOTE_HOST }}
          REMOTE_USER: ${{ vars.REMOTE_USER }}
          SOURCE: "artifact/"
          TARGET: ${{ vars.TARGET }}

      - name: Instalação da aplicação
        uses: nekiro/ssh-job@main
        with:
            host: ${{ vars.REMOTE_HOST }}
            key: ${{ secrets.SERVER_SSH_KEY }}
            user: ${{ vars.REMOTE_USER }}
            command: |
                cd auditteiapi.ofernandoavila.com/
                /opt/cpanel/composer/bin/composer install --no-dev --no-progress -a
                php artisan jwt:secret
                php artisan migrate
                php artisan optimize